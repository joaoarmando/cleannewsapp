// Mocks generated by Mockito 5.0.16 from annotations
// in cleannewsapp/test/data/repositories/news_repository_impl_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:cleannewsapp/data/datasources/local_news_datasource.dart'
    as _i2;
import 'package:cleannewsapp/data/datasources/remote_news_datasource.dart'
    as _i5;
import 'package:cleannewsapp/data/models/news_model.dart' as _i4;
import 'package:cleannewsapp/infra/network/networ_info.dart' as _i6;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

/// A class which mocks [LocalNewsDatasource].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocalNewsDatasource extends _i1.Mock
    implements _i2.LocalNewsDatasource {
  MockLocalNewsDatasource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> cacheNewsByCountry(
          {String? country, List<_i4.NewsModel>? news}) =>
      (super.noSuchMethod(
          Invocation.method(
              #cacheNewsByCountry, [], {#country: country, #news: news}),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i3.Future<void>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [RemoteNewsDatasource].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoteNewsDatasource extends _i1.Mock
    implements _i5.RemoteNewsDatasource {
  MockRemoteNewsDatasource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.NewsModel>> getNewsByCountry(String? country) =>
      (super.noSuchMethod(Invocation.method(#getNewsByCountry, [country]),
              returnValue: Future<List<_i4.NewsModel>>.value(<_i4.NewsModel>[]))
          as _i3.Future<List<_i4.NewsModel>>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i6.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<bool> get isConnected =>
      (super.noSuchMethod(Invocation.getter(#isConnected),
          returnValue: Future<bool>.value(false)) as _i3.Future<bool>);
  @override
  String toString() => super.toString();
}
